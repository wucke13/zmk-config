/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;// 6 underglow, 21 backlight
};

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        conf_layer {
            bindings = <&to 3>;
            key-positions = <36 37 38>;
        };

        conf_layer_exit {
            bindings = <&to 0>;
            key-positions = <39 40 41>;
        };

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <39 36>;
            layers = <3>;
        };
    };

    behaviors {
        super_shift_dance: super_shift_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "SUPER_SHIFT_DANCE";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_GUI>, <&kp RS(RIGHT_GUI)>;
        };

        altgr_alt_dance: altgr_alt_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ALTGR_ALT_DANCE";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT>, <&kp LALT>;
        };

        layer_1_gui_dance: layer_1_gui_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_1_GUI_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_GUI>, <&kp LS(LEFT_GUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |---|  Y  |  U  |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |---|  H  |  J  |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |---|  N  |  M  |  ,  |  .  |  /  | SHFT |
            //                  |ALT/ESC| NUM |MOD/SPC|-|MOD/ENT| SYM |ALTgr/BKSP|

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R               &kp T        &kp Y               &kp U  &kp I             &kp O    &kp P     &kp DELETE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F               &kp G        &kp H               &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V               &kp B        &kp N               &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp RSHFT
                         &kp BSPC  &layer_1_gui_dance  &kp SPACE    &super_shift_dance  &mo 2  &altgr_alt_dance
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // | BTCLR| BT0 |    | UP |    |   |---|HOM| 7 | 8 | 9 |END|  BKSP  |
            // |BLEout| BT1 |LEFT|DOWN|RIHT|CTL|---|CTL| 4 | 5 | 6 |PUP| RGBeff |
            // |USBout| BT2 |    |    |    |SHT|---|SHT| 1 | 2 | 3 |PDW| RGBtog |
            //                    |    |    |MOD|-|MOD| 0 | . |

            bindings = <
&trans  &kp C_VOL_UP       &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &none        &kp HOME   &kp N7  &kp N8   &kp N9  &kp END    &trans
&trans  &kp C_VOLUME_DOWN  &kp LEFT     &kp DOWN  &kp RIGHT      &kp LCTRL    &kp RCTRL  &kp N4  &kp N5   &kp N6  &kp PG_UP  &trans
&trans  &kp C_MUTE         &none        &none     &none          &kp LSHFT    &kp RSHFT  &kp N1  &kp N2   &kp N3  &kp PG_DN  &trans
                                        &trans    &trans         &trans       &trans     &kp N0  &kp DOT
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |---|  ^  |  &  |  *  |  (  |  )  |  DEL |
            // | CTRL |  F1 |  F2 |  F3 |  F4 |  F5 |---|  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |  F6 |  F7 |  F8 |  F9 | F10 |---|  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | F11 |     | F12 |---|     |     |     |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp LCTRL  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp F11   &trans    &kp F12      &trans     &none      &none
            >;
        };

        conf_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_TOG
&none       &none         &none         &none         &none         &none           &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &none
&none       &none         &none         &none         &none         &none           &none            &none            &none            &none            &none            &none
                                        &none         &none         &none           &none            &none            &none
            >;
        };
    };
};
